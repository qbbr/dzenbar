#!/usr/bin/env bash

. .dzenbarrc

MONITOR=${1}
PIPE_LINE=${2}

calculate() {
	local sum=0

	for arg; do
		read -r i < "${arg}"
		sum=$(( sum + i ))
	done

	cache="/tmp/cache_${1##*/}"
	[[ -f "${cache}" ]] && read -r old < "${cache}" || old=0
	echo "${sum}" > "${cache}"

	echo $(( sum - old ))
}

# 1st call for cache
rxb=$(calculate /sys/class/net/[ew]*/statistics/rx_bytes)
txb=$(calculate /sys/class/net/[ew]*/statistics/tx_bytes)

while true; do
	rxb=$(echo "$(calculate /sys/class/net/[ew]*/statistics/rx_bytes) / 1024 / ${NETWORK_UPDATE}" | bc -l | xargs printf "%.2f")
	txb=$(echo "$(calculate /sys/class/net/[ew]*/statistics/tx_bytes) / 1024 / ${NETWORK_UPDATE}" | bc -l | xargs printf "%.2f")

	output=" $(iconColor 'wired') $(iconColor 'down' '#859900') ${rxb} kBs $(iconColor 'up' '#B58900') ${txb} kBs"

	putLineToPipeFile ${MONITOR} ${PIPE_LINE} "${output}"
	sleep ${NETWORK_UPDATE}
done
